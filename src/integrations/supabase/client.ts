
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

// Get environment variables from .env file or fallback to explicit values
const SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL || "https://zdutodrbvozfdnuqkshc.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = import.meta.env.VITE_SUPABASE_ANON_KEY || "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InpkdXRvZHJidm96ZmRudXFrc2hjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDYzMzkxMDYsImV4cCI6MjA2MTkxNTEwNn0.vq-QytO39hrRw2aDUx4YVmevJ36dJrQOHTdstC2ZI1U";

if (!SUPABASE_URL || !SUPABASE_PUBLISHABLE_KEY) {
  console.error('Missing Supabase credentials. Make sure VITE_SUPABASE_URL and VITE_SUPABASE_ANON_KEY are set in .env file.');
}

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(
  SUPABASE_URL,
  SUPABASE_PUBLISHABLE_KEY,
  {
    auth: {
      persistSession: true,
      autoRefreshToken: true,
      detectSessionInUrl: true,
    },
  }
);

// Helper function for error handling
export const handleSupabaseError = (error: Error | null, fallbackMessage = 'An error occurred') => {
  if (error) {
    console.error('Supabase error:', error);
    return {
      isError: true,
      message: error.message || fallbackMessage
    };
  }
  return { isError: false };
};
